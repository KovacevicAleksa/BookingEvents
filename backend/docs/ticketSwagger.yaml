openapi: 3.0.0
info:
  title: Booking Event API - Ticket Routes
  version: 1.0.0
  description: API routes for ticket management and interactions

paths:
  /tickets:
    get:
      summary: Retrieve all tickets
      tags:
        - Tickets
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a new ticket
      tags:
        - Tickets
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventID
                - assignedTo
              properties:
                eventID:
                  type: string
                assignedTo:
                  type: string
              example:
                eventID: "12345"
                assignedTo: "user@example.com"
      responses:
        '201':
          description: Ticket successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: Missing required fields
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tickets/filter:
    post:
      summary: Filter tickets by eventID and/or assignedTo
      tags:
        - Tickets
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventID:
                  type: string
                  description: ID of the event to filter tickets
                assignedTo:
                  type: string
                  description: Email of the user to whom the ticket is assigned
              example:
                eventID: "12345"
                assignedTo: "user@example.com"
      responses:
        '200':
          description: Tickets matching the filter criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        '404':
          description: No tickets found with the given criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /tickets/{id}:
    get:
      summary: Retrieve a specific ticket by ID
      tags:
        - Tickets
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update an existing ticket by ID
      tags:
        - Tickets
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventID:
                  type: string
                assignedTo:
                  type: string
              example:
                eventID: "54321"
                assignedTo: "new_user@example.com"
      responses:
        '200':
          description: Ticket successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a ticket by ID
      tags:
        - Tickets
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ticket successfully deleted
        '404':
          description: Ticket not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Ticket:
      type: object
      properties:
        _id:
          type: string
        eventID:
          type: string
        assignedTo:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        _id: "64123abcd5678"
        eventID: "12345"
        assignedTo: "user@example.com"
        createdAt: "2023-12-05T12:00:00Z"
        updatedAt: "2023-12-05T12:00:00Z"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      example:
        message: "An error occurred"

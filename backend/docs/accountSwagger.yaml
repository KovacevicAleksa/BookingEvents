openapi: 3.0.0
info:
  title: Booking Event API - Account Routes
  version: 1.0.0
  description: Comprehensive API routes for account management, password reset, and event interactions

servers:
  - url: /api/v1
    description: Base API endpoint

paths:
  /accounts:
    get:
      summary: Retrieve all accounts
      description: Fetches a list of all accounts, excluding sensitive information
      tags:
        - Accounts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountSummary'
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}:
    get:
      summary: Retrieve a specific account by ID
      description: Fetches detailed account information for a specific account ID
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique identifier of the account
      responses:
        '200':
          description: Successfully retrieved account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /edit/account/{id}:
    patch:
      summary: Update an account
      description: Allows updating account details such as events or email
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique identifier of the account to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  type: array
                  items:
                    type: string
                  description: List of event IDs to associate with the account
                email:
                  type: string
                  format: email
                  description: New email address for the account
      responses:
        '200':
          description: Account successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /edit/password/{email}:
    get:
      summary: Request password reset verification code
      description: Sends a verification code to the specified email for password reset
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email address to send verification code
      responses:
        '200':
          description: Verification code sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /edit/password:
    patch:
      summary: Reset account password
      description: Update account password using verification code
      tags:
        - Accounts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - email
                - password
                - code
              properties:
                id:
                  type: string
                  description: Account unique identifier
                email:
                  type: string
                  format: email
                  description: Account email
                password:
                  type: string
                  minLength: 8
                  description: New password (must meet complexity requirements)
                code:
                  type: string
                  description: Verification code sent to email
      responses:
        '200':
          description: Password successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request (weak password, missing fields, invalid code)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /remove/account/event/{id}:
    delete:
      summary: Remove an event from account
      description: Remove a specific event from an account's event list
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Account unique identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EventId
              properties:
                EventId:
                  type: string
                  description: Unique identifier of the event to remove
      responses:
        '200':
          description: Event successfully removed from account
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authentication token required for accessing protected routes

  schemas:
    Account:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        events:
          type: array
          items:
            type: string
        isAdmin:
          type: boolean
        isOrganizer:
          type: boolean

    AccountSummary:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Detailed error message
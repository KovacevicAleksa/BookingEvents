networks:
  frontend:
    driver: bridge # Uses the bridge driver for the frontend network
  backend:
    driver: bridge # Uses the bridge driver for the backend network

services:
  express-api:
    build:
      context: . # Builds the Docker image from the current directory
      dockerfile: Dockerfile # Uses the Dockerfile located in the root directory
    container_name: express-api # Names the container "express-api"
    expose:
      - "8080" # Exposes port 8080 to other services in the same network
    environment:
      - NODE_ENV=production # Sets the environment variable for Node.js to production
      - MONGODB_URI=${MONGODB_URI} # Sets the MongoDB URI from an environment variable
      - JWT_SECRET=${JWT_SECRET} # Sets the JWT secret from an environment variable
      - EMAIL_USER=${EMAIL_USER} # Sets the email user from an environment variable
      - EMAIL_PASS=${EMAIL_PASS} # Sets the email password from an environment variable
      - DATABASE_URL=${DATABASE_URL} # Sets the DATABASE_URL from an environment variable

    networks:
      - frontend # Connects to the frontend network
      - backend # Connects to the backend network

  nginx:
    build:
      context: . # Builds the Docker image from the current directory
      dockerfile: Dockerfile.nginx # Uses the Dockerfile.nginx located in the root directory
    container_name: express-nginx # Names the container "express-nginx"
    ports:
      - "8081:8081" # Maps port 8081 on the host to port 8081 on the container
    depends_on:
      - express-api # Ensures the express-api service is started before nginx
    networks:
      - frontend # Connects to the frontend network

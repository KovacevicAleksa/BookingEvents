{
  "scripts": {
    "all-docker": "docker compose up",
    "all-k8s": "concurrently \"npm run k8s --prefix ./backend\"",
    "all-nodemon": "concurrently \"nodemon backend/server.js --prefix ./backend\" \"npm start --prefix ./frontend\"",
    "all-node": "concurrently \"node backend/server.js\" \"npm start --prefix frontend\"",
    "all-test": "concurrently \"npm test --prefix ./backend\" \"npm test --prefix ./frontend\"",
    "delete-k8s": "npm run k8s-delete --prefix ./backend",
    "k8s-build": "concurrently \"docker build -t express-api:latest -f ./backend/Dockerfile ./backend\" \"docker build -t express-nginx:latest -f ./backend/Dockerfile.nginx ./backend\" \"docker build -t react-frontend:latest -f ./frontend/Dockerfile.frontend ./frontend\" \"docker build -t db-backup-go:latest -f ./backend/go/Dockerfile.go.backend ./backend/go\"",
    "k8s-tag": "docker tag express-api:latest kovacevicaleksa/express-api:latest && docker tag express-nginx:latest kovacevicaleksa/express-nginx:latest && docker tag react-frontend:latest kovacevicaleksa/react-frontend:latest && docker tag db-backup-go:latest kovacevicaleksa/db-backup-go:latest",
    "k8s-push": "docker push kovacevicaleksa/express-api:latest && docker push kovacevicaleksa/express-nginx:latest && docker push kovacevicaleksa/react-frontend:latest && docker push kovacevicaleksa/db-backup-go:latest",
    "k8s-rollout": "kubectl apply -f ./backend/kubernetes/network-policy.yaml && kubectl rollout restart deployment express-api nginx frontend postgres pgadmin grafana prometheus db-backup-go jenkins",
    "k8s-rollout-status": "kubectl rollout status deployment/express-api && kubectl rollout status deployment/nginx && kubectl rollout status deployment/frontend && kubectl rollout status deployment/postgres && kubectl rollout status deployment/pgadmin && kubectl rollout status deployment/grafana && kubectl rollout status deployment/prometheus && kubectl rollout status deployment/db-backup-go && kubectl rollout status deployment/jenkins",
    "k8s-status": "kubectl get pods && kubectl get deployments && kubectl get networkpolicies",
    "k8s-update": "npm run k8s-build && npm run k8s-tag && npm run k8s-push",
    "k8s-update-run": "npm run k8s-build && npm run k8s-tag && npm run k8s-push && npm run k8s-rollout && npm run all-k8s",
    "docker-update": "docker compose build",
    "docker-build": "docker compose build",
    "update-all": "npm run docker-update && npm run k8s-update",
    "clean-docker": "docker stop $(docker ps -a -q) || true && docker rm $(docker ps -a -q) || true && docker system prune -a -f --volumes",
    "clean-k8s": "kubectl delete networkpolicies --all && kubectl delete deployments --all && kubectl delete services --all && kubectl delete pods --all --force && kubectl delete pvc --all && kubectl delete pv --all",
    "clean-all": "npm run clean-docker && npm run clean-k8s",
    "start-fresh": "npm run clean-all && npm run k8s-build && npm run k8s-tag && npm run k8s-push && npm run update-all && npm run all-k8s",
    "k8s-build-2": "npm-run-all --parallel --continue-on-error k8s-build:*",
    "k8s-build:api": "docker build --network=host -t express-api:latest -f ./backend/Dockerfile ./backend",
    "k8s-build:nginx": "docker build --network=host -t express-nginx:latest -f ./backend/Dockerfile.nginx ./backend",
    "k8s-build:frontend": "docker build --network=host -t react-frontend:latest -f ./frontend/Dockerfile.frontend ./frontend",
    "k8s-build:go": "docker build --network=host -t db-backup-go:latest -f ./backend/go/Dockerfile.go.backend ./backend/go"
  },
  "dependencies": {
    "concurrently": "^9.1.0"
  },
  "devDependencies": {
    "npm-run-all": "^4.1.5"
  }
}

{
  "scripts": {
    "all-docker": "docker compose up",
    "all-k8s": "concurrently \"npm run k8s --prefix ./backend\"",
    "all-nodemon": "concurrently \"nodemon backend/server.js --prefix ./backend\" \"npm start --prefix ./frontend\"",
    "all-node": "concurrently \"node backend/server.js\" \"npm start --prefix frontend\"",
    "all-test": "concurrently \"npm test --prefix ./backend\" \"npm test --prefix ./frontend\"",
    "delete-k8s": "npm run k8s-delete --prefix ./backend",
    "k8s-build": "concurrently \"docker build -t express-api:latest -f ./backend/Dockerfile ./backend\" \"docker build -t express-nginx:latest -f ./backend/Dockerfile.nginx ./backend\" \"docker build -t react-frontend:latest -f ./frontend/Dockerfile.frontend ./frontend\"",
    "k8s-tag": "docker tag express-api:latest kovacevicaleksa/express-api:latest && docker tag express-nginx:latest kovacevicaleksa/express-nginx:latest && docker tag react-frontend:latest kovacevicaleksa/react-frontend:latest",
    "k8s-push": "docker push kovacevicaleksa/express-api:latest && docker push kovacevicaleksa/express-nginx:latest && docker push kovacevicaleksa/react-frontend:latest",
    "k8s-rollout": "kubectl rollout restart deployment express-api nginx frontend postgres pgadmin grafana prometheus",
    "k8s-rollout-status": "kubectl rollout status deployment/express-api && kubectl rollout status deployment/nginx && kubectl rollout status deployment/frontend && kubectl rollout status deployment/postgres && kubectl rollout status deployment/pgadmin && kubectl rollout status deployment/grafana && kubectl rollout status deployment/prometheus",
    "k8s-status": "kubectl get pods && kubectl get deployments",
    "k8s-update": "npm run k8s-build && npm run k8s-tag && npm run k8s-push && npm run k8s-rollout",
    "k8s-update-run": "npm run k8s-build && npm run k8s-tag && npm run k8s-push && npm run k8s-rollout && npm run all-k8s",
    "docker-update": "docker compose build",
    "docker-build": "docker compose build",
    "update-all": "npm run docker-update && npm run k8s-update"
  },
  "dependencies": {
    "concurrently": "^8.2.2"
  },
  "devDependencies": {}
}

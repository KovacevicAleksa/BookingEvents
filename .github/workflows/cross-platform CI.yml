name: Cross-platform CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-standard:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x, 22.x]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # macOS specific setup
    - name: Set up Docker on macOS
      if: runner.os == 'macOS'
      run: |
        brew install colima docker
        colima start
        sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

    # Windows specific setup
    - name: Set up Docker on Windows
      if: runner.os == 'Windows'
      run: |
        choco install docker-desktop -y
        Start-Service docker

    # Ubuntu specific setup
    - name: Set up Docker on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo usermod -aG docker $USER

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Create Kubernetes configuration files
    - name: Create Kubernetes configs
      run: |
        mkdir -p kubernetes
        cat << EOF > kubernetes/secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: app-secret
        type: Opaque
        data:
          # Add your base64 encoded secrets here
          username: dXNlcm5hbWU=
        EOF
        
        cat << EOF > kubernetes/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: app-deployment
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: myapp
          template:
            metadata:
              labels:
                app: myapp
            spec:
              containers:
              - name: myapp
                image: nginx:latest
        EOF
        
        # Add other required Kubernetes YAML files

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master
      with:
        driver: docker
        kubernetes-version: 'stable'
        start-args: '--wait=true --wait-timeout=6m'

    - name: Verify Minikube status
      run: |
        minikube status
        kubectl get pods -A
      
    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run all-k8s
      env:
        CI: true

  test-fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --privileged

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        dnf update -y
        dnf install -y nodejs npm kubectl

    - name: Install Docker
      run: |
        dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
        dnf install -y docker-ce docker-ce-cli containerd.io
        systemctl start docker

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        install minikube-linux-amd64 /usr/local/bin/minikube

    # Create Kubernetes configuration files (same as above)
    - name: Create Kubernetes configs
      run: |
        mkdir -p kubernetes
        cat << EOF > kubernetes/secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: app-secret
        type: Opaque
        data:
          username: dXNlcm5hbWU=
        EOF
        # Add other required Kubernetes YAML files

    - name: Start Minikube
      run: |
        minikube start --driver=docker
        minikube status

    - name: Install project dependencies
      run: npm ci

    - name: Run tests
      run: npm run all-k8s
      env:
        CI: true
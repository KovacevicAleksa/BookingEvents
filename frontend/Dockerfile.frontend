# Build stage
FROM node:18-alpine AS build  

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Clear npm cache and install dependencies with more verbosity
RUN npm cache clean --force && \
    npm install --verbose

# Copy frontend source code
COPY . .

# Add environment variable to increase Node's memory limit
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Build the application with more verbose output
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built assets from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 3000
EXPOSE 3000

# Start nginx
CMD ["nginx", "-g", "daemon off;"]